resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tags: latest-final

resources:
- name: config-private
  type: git
  source:
    uri: ((configuration_private.uri))
    branch: master
    private_key: ((configuration_private.key))
    username: ((configuration_private.username))
    password: ((configuration_private.password))

- name: pas-product
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    region_name: ((s3.region_name))
    secret_access_key: ((s3.secret_access_key))
    regexp: cf-(.*).pivotal

- name: pas-stemcell
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    region_name: ((s3.region_name))
    secret_access_key: ((s3.secret_access_key))
    regexp: bosh-stemcell-(250.25)-vsphere.*\.tgz

- name: platform-automation-tasks
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    region_name: ((s3.region_name))
    secret_access_key: ((s3.secret_access_key))
    regexp: platform-automation-tasks-(.*).zip

- name: platform-automation-image
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    region_name: ((s3.region_name))
    secret_access_key: ((s3.secret_access_key))
    regexp: platform-automation-image-(.*).tgz

jobs:
- name: install-pas
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params: {unpack: true}
      trigger: true
    - get: platform-automation-tasks
      params: {unpack: true}
    - get: pas-product
    - get: config-private
  # - task: credhub-interpolate
  #   <<: *credhub-interpolate
  - task: upload-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-product.yml
    input_mapping:
      product: pas-product
      env: config-private
    params:
      ENV_FILE: env/ops-man-env.yml
  - task: stage-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/stage-product.yml
    input_mapping:
      product: pas-product
      env: config-private
    params:
      ENV_FILE: env/ops-man-env.yml
  # - task: staged-config
  #   image: platform-automation-image
  #   file: platform-automation-tasks/tasks/staged-config.yml
  #   input_mapping:
  #     env: interpolated-files
  #   params:
  #     PRODUCT_NAME: ((products.pas.product_name))
  #     ENV_FILE: ((foundation))/env/((products.pas.product_slug)).yml
  #     SUBSTITUTE_CREDENTIALS_WITH_PLACEHOLDERS: true
    # on_success:
    #   do:
    #     - task: make-commit
    #       image: platform-automation-image
    #       file: platform-automation-tasks/tasks/make-git-commit.yml
    #       input_mapping:
    #         repository: config-private
    #         file-source: config-private
    #       output_mapping:
    #         repository-commit: configuration-commit
    #       params:
    #         FILE_SOURCE_PATH: pas.yml
    #         FILE_DESTINATION_PATH: generated-config/pas.yml
    #         GIT_AUTHOR_EMAIL: "platform-automation-pipeline-bot@example.com"
    #         GIT_AUTHOR_NAME: "Platform Automation Bot"
    #         COMMIT_MESSAGE: 'Update PAS file'
    #     - put: config-private
    #       params:
    #         repository: configuration-commit
    #         merge: true

- name: upload-stemcell-pas
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params: {unpack: true}
      passed: [install-pas]
      trigger: true
    - get: platform-automation-tasks
      params: {unpack: true}
      passed: [install-pas]
    - get: config-private
      passed: [install-pas]
    - get: pas-stemcell
  # - task: credhub-interpolate
  #   <<: *credhub-interpolate
  - task: upload-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: config-private
      stemcell: pas-stemcell
    params:
      ENV_FILE: env/ops-man-env.yml

- name: configure-product-pas
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params: {unpack: true}
      passed: [upload-stemcell-pas]
    - get: platform-automation-tasks
      params: {unpack: true}
    - get: config-private
  # - task: credhub-interpolate
  #   <<: *credhub-interpolate
  - task: configure-pas
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: config-private
      env: config-private
      #vars: config-private
    params:
      CONFIG_FILE: config/pas.yml
      #VARS_FILES: vars/((foundation))/vars/((products.pas.product_slug)).yml
      ENV_FILE: env/ops-man-env.yml

- name: apply-pas-product-changes
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      trigger: true
      passed: [configure-product-pas]
      params: {unpack: true}
    - get: platform-automation-tasks
      params: {unpack: true}
    - get: config-private
  - task: apply-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-changes.yml
    input_mapping:
      env: config-private
    params:
      ENV_FILE: env/ops-man-env.yml
