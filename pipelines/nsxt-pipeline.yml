resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tags: latest-final

resources:
- name: config-private
  type: git
  source:
    uri: ((configuration_private.uri))
    branch: master
    private_key: ((configuration_private.key))
    username: ((configuration_private.username))
    password: ((configuration_private.password))

- name: nsxt-product
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    region_name: ((s3.region_name))
    secret_access_key: ((s3.secret_access_key))
    regexp: VMware-NSX-T-(.*).pivotal

- name: platform-automation-tasks
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    region_name: ((s3.region_name))
    secret_access_key: ((s3.secret_access_key))
    regexp: platform-automation-tasks-(.*).zip

- name: platform-automation-image
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    region_name: ((s3.region_name))
    secret_access_key: ((s3.secret_access_key))
    regexp: platform-automation-image-(.*).tgz

jobs:
- name: install-nsxt
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params: {unpack: true}
      trigger: true
    - get: platform-automation-tasks
      params: {unpack: true}
    - get: nsxt-product
    - get: config-private
  # - task: credhub-interpolate
  #   <<: *credhub-interpolate
  - task: upload-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-product.yml
    input_mapping:
      product: nsxt-product
      env: config-private
    params:
      ENV_FILE: env/ops-man-env.yml
  - task: stage-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/stage-product.yml
    input_mapping:
      product: nsxt-product
      env: config-private
    params:
      ENV_FILE: env/ops-man-env.yml

- name: configure-nsxt
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params: {unpack: true}
      passed: [install-nsxt]
    - get: platform-automation-tasks
      params: {unpack: true}
    - get: config-private
  # - task: credhub-interpolate
  #   <<: *credhub-interpolate
  - task: configure-nsxt
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: config-private
      env: config-private
      #vars: config-private
    params:
      CONFIG_FILE: config/nsxt.yml
      #VARS_FILES: vars/((foundation))/vars/((products.pas.product_slug)).yml
      ENV_FILE: env/ops-man-env.yml

- name: apply-nsxt-changes
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      trigger: true
      passed: [configure-nsxt]
      params: {unpack: true}
    - get: platform-automation-tasks
      params: {unpack: true}
    - get: config-private
  - task: apply-all-product-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-changes.yml
    input_mapping:
      env: config-private
    params:
      ENV_FILE: env/ops-man-env.yml
